# This section describes the image that will be used to first bootstrap a compiler and related tools,
# and then produce the output bootable image
host:
  image: docker.io/library/ubuntu:22.04
  steps: |
    RUN apt-get update \
     && apt-get install -y build-essential bison gawk m4 python3 texinfo bash curl wget \
     && ln -s --force /bin/bash /bin/sh
    RUN set -eu ; \
        mkdir -pv $LFS/{etc,var} $LFS/usr/{bin,lib,sbin} ; \
        for i in bin lib sbin; do \
          ln -sv --force usr/$i $LFS/$i ; \
        done ; \
        case $(uname -m) in \
          x86_64) mkdir -pv $LFS/lib64 ;; \
        esac ; \
        mkdir -pv $LFS/tool

# These are the patches and source tarballs for all of the tools and libraries
# available. You can add your own if they are .patch, .tar, .tar.gz, .tar.xz, or .tar.bz2
packages:
# Patches
- name: glibc-2.39-fhs-1
  url: https://www.linuxfromscratch.org/patches/lfs/12.1/glibc-2.39-fhs-1.patch

# Needed for build from host
- name: linux
  url: https://www.kernel.org/pub/linux/kernel/v6.x/linux-6.7.4.tar.xz
  deps:
  - flex
  - zlib
  - libelf
  - bc
  - openssl
  - zstd
  - kmod
- name: gcc
  url: https://ftp.gnu.org/gnu/gcc/gcc-13.2.0/gcc-13.2.0.tar.xz
  deps:
  - zlib
  - mpc
  - mpfr
  - gmp
  - libxcrypt
- name: binutils
  url: https://sourceware.org/pub/binutils/releases/binutils-2.42.tar.xz
  deps:
  - zlib
- name: glibc
  url: https://ftp.gnu.org/gnu/glibc/glibc-2.39.tar.xz
  patches:
  - name: glibc-2.39-fhs-1
    cmd: patch -Np1 -i
  srcDeps:
  - tzdata
- name: mpfr
  url: https://ftp.gnu.org/gnu/mpfr/mpfr-4.2.1.tar.xz
  deps:
  - gmp
- name: gmp
  url: https://ftp.gnu.org/gnu/gmp/gmp-6.3.0.tar.xz
- name: mpc
  url: https://ftp.gnu.org/gnu/mpc/mpc-1.3.1.tar.gz
  deps:
  - gmp
  - mpfr

- name: binutils-from-host
  srcFrom: binutils
- name: gcc-from-host
  srcFrom: gcc
  srcDeps:
  - mpfr
  - gmp
  - mpc
  lfsDeps:
  - binutils-from-host
  preBuildSteps: |
    RUN ln -sv $LFS_SRC/mpfr $LFS_SRC/gmp $LFS_SRC/mpc ./
- name: linux-headers-from-host
  srcFrom: linux
- name: glibc-from-host
  srcFrom: glibc
  patches:
  - name: glibc-2.39-fhs-1
    cmd: patch -Np1 -i
  lfsDeps:
  - linux-headers-from-host
  - gcc-from-host
- name: libstdcpp-from-host
  srcFrom: gcc
  lfsDeps:
  - glibc-from-host


# Needed for bootstrap
- name: m4
  url: https://ftp.gnu.org/gnu/m4/m4-1.4.19.tar.xz
- name: ncurses
  url: https://anduin.linuxfromscratch.org/LFS/ncurses-6.4-20230520.tar.xz
- name: bash
  url: https://ftp.gnu.org/gnu/bash/bash-5.2.21.tar.gz
- name: coreutils
  url: https://ftp.gnu.org/gnu/coreutils/coreutils-9.4.tar.xz
  deps:
  - gettext
  - autoconf
  - automake
- name: diffutils
  url: https://ftp.gnu.org/gnu/diffutils/diffutils-3.10.tar.xz
- name: file
  url: https://astron.com/pub/file/file-5.45.tar.gz
- name: findutils
  url: https://ftp.gnu.org/gnu/findutils/findutils-4.9.0.tar.xz
- name: gawk
  url: https://ftp.gnu.org/gnu/gawk/gawk-5.3.0.tar.xz
- name: grep
  url: https://ftp.gnu.org/gnu/grep/grep-3.11.tar.xz
- name: gzip
  url: https://ftp.gnu.org/gnu/gzip/gzip-1.13.tar.xz
- name: make
  url: https://ftp.gnu.org/gnu/make/make-4.4.1.tar.gz
- name: patch
  url: https://ftp.gnu.org/gnu/patch/patch-2.7.6.tar.xz
- name: sed
  url: https://ftp.gnu.org/gnu/sed/sed-4.9.tar.xz
- name: tar
  url: https://ftp.gnu.org/gnu/tar/tar-1.35.tar.xz
- name: xz
  url: https://github.com/xz-mirror/xz/releases/download/v5.4.0/xz-5.4.0.tar.xz
- name: gettext
  url: https://ftp.gnu.org/gnu/gettext/gettext-0.22.4.tar.xz
- name: bison
  url: https://ftp.gnu.org/gnu/bison/bison-3.8.2.tar.xz
- name: perl
  url: https://www.cpan.org/src/5.0/perl-5.38.2.tar.xz
  deps:
  - zlib
  - bzip2
- name: python
  url: https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tar.xz
  deps:
  - expat
  - zlib
  - libffi
- name: texinfo
  url: https://ftp.gnu.org/gnu/texinfo/texinfo-7.1.tar.xz
  deps:
  - perl
- name: util-linux
  url: https://www.kernel.org/pub/linux/utils/util-linux/v2.39/util-linux-2.39.3.tar.xz
  deps:
  - m4
  - perl
  - autoconf
  - automake



- name: m4-bootstrap
  srcFrom: m4
- name: ncurses-bootstrap
  srcFrom: ncurses
- name: bash-bootstrap
  srcFrom: bash
- name: coreutils-bootstrap
  srcFrom: coreutils
- name: diffutils-bootstrap
  srcFrom: diffutils
- name: file-bootstrap
  srcFrom: file
- name: findutils-bootstrap
  srcFrom: findutils
- name: gawk-bootstrap
  srcFrom: gawk
- name: grep-bootstrap
  srcFrom: grep
- name: gzip-bootstrap
  srcFrom: gzip
- name: make-bootstrap
  srcFrom: make
- name: patch-bootstrap
  srcFrom: patch
- name: sed-bootstrap
  srcFrom: sed
- name: tar-bootstrap
  srcFrom: tar
- name: xz-bootstrap
  srcFrom: xz
- name: binutils-bootstrap
  srcFrom: binutils
- name: gcc-bootstrap
  srcFrom: gcc
  srcDeps:
  - mpfr
  - gmp
  - mpc
  lfsDeps:
  - binutils-bootstrap
  preBuildSteps: |
    RUN ln -sv $LFS_SRC/mpfr $LFS_SRC/gmp $LFS_SRC/mpc ./
- name: gettext-bootstrap
  srcFrom: gettext
- name: bison-bootstrap
  srcFrom: bison
- name: perl-bootstrap
  srcFrom: perl
- name: python-bootstrap
  srcFrom: python
- name: texinfo-bootstrap
  srcFrom: texinfo
  deps:
  - perl-bootstrap
- name: util-linux-bootstrap
  srcFrom: util-linux

# Final system packages
- name: acl
  url: https://download.savannah.gnu.org/releases/acl/acl-2.3.2.tar.xz
  deps:
  - attr
- name: attr
  url: https://download.savannah.gnu.org/releases/attr/attr-2.5.2.tar.gz
- name: autoconf
  url: https://ftp.gnu.org/gnu/autoconf/autoconf-2.72.tar.xz
- name: automake
  url: https://ftp.gnu.org/gnu/automake/automake-1.16.5.tar.xz
  deps:
  - zlib
  - bzip2
  - perl
  - autoconf
- name: bc
  url: https://github.com/gavinhoward/bc/releases/download/6.7.5/bc-6.7.5.tar.xz
- name: bzip2
  url: https://www.sourceware.org/pub/bzip2/bzip2-1.0.8.tar.gz
- name: check
  url: https://github.com/libcheck/check/releases/download/0.15.2/check-0.15.2.tar.gz
- name: dejagnu
  url: https://ftp.gnu.org/gnu/dejagnu/dejagnu-1.6.3.tar.gz
- name: e2fsprogs
  url: https://downloads.sourceforge.net/project/e2fsprogs/e2fsprogs/v1.47.0/e2fsprogs-1.47.0.tar.gz
  deps:
  - pkgconf
- name: elfutils
  url: https://sourceware.org/ftp/elfutils/0.190/elfutils-0.190.tar.bz2
- name: expat
  url: https://github.com/libexpat/libexpat/releases/download/R_2_6_2/expat-2.6.2.tar.xz
- name: expect
  url: https://prdownloads.sourceforge.net/expect/expect5.45.4.tar.gz
  deps:
  - tcl
- name: flex
  url: https://github.com/westes/flex/releases/download/v2.6.4/flex-2.6.4.tar.gz
- name: flit-core
  url: https://pypi.org/packages/source/f/flit-core/flit_core-3.9.0.tar.gz
  # deps:
  #  - expat
  #  - zlib
  #  - libffi
  #  - python
- name: gdbm
  url: https://ftp.gnu.org/gnu/gdbm/gdbm-1.23.tar.gz
- name: gperf
  url: https://ftp.gnu.org/gnu/gperf/gperf-3.1.tar.gz
- name: groff
  url: https://ftp.gnu.org/gnu/groff/groff-1.23.0.tar.gz
- name: grub
  url: https://ftp.gnu.org/gnu/grub/grub-2.12.tar.xz
  deps:
  - flex
- name: iana-etc
  url: https://github.com/Mic92/iana-etc/releases/download/20240125/iana-etc-20240125.tar.gz
- name: inetutils
  url: https://ftp.gnu.org/gnu/inetutils/inetutils-2.5.tar.xz
- name: intltool
  url: https://launchpad.net/intltool/trunk/0.51.0/+download/intltool-0.51.0.tar.gz
  deps:
  - expat
  - xml-parser
- name: iproute2
  url: https://www.kernel.org/pub/linux/utils/net/iproute2/iproute2-6.7.0.tar.xz
  deps:
  - flex
- name: jinja2
  url: https://pypi.org/packages/source/J/Jinja2/Jinja2-3.1.3.tar.gz
  deps:
  # - zlib
  # - expat
  # - libffi
  # - python
  - wheel
  - setuptools
  - markupsafe
- name: kbd
  url: https://www.kernel.org/pub/linux/utils/kbd/kbd-2.6.4.tar.xz
  deps:
  - autoconf
- name: kmod
  url: https://www.kernel.org/pub/linux/utils/kernel/kmod/kmod-31.tar.xz
  deps:
  - openssl
  - xz
  - zstd
  - zlib
  - pkgconf
- name: less
  url: https://www.greenwoodsoftware.com/less/less-643.tar.gz
- name: lfs-bootscripts
  url: https://www.linuxfromscratch.org/lfs/downloads/12.1/lfs-bootscripts-20230728.tar.xz
- name: libcap
  url: https://www.kernel.org/pub/linux/libs/security/linux-privs/libcap2/libcap-2.69.tar.xz
- name: libffi
  url: https://github.com/libffi/libffi/releases/download/v3.4.4/libffi-3.4.4.tar.gz
- name: libpipeline
  url: https://download.savannah.gnu.org/releases/libpipeline/libpipeline-1.5.7.tar.gz
  deps:
  - m4
  - perl
  - autoconf

- name: libtool
  url: https://ftp.gnu.org/gnu/libtool/libtool-2.4.7.tar.xz
- name: libxcrypt
  url: https://github.com/besser82/libxcrypt/releases/download/v4.4.36/libxcrypt-4.4.36.tar.xz
- name: man-db
  url: https://download.savannah.gnu.org/releases/man-db/man-db-2.12.0.tar.xz
  deps:
  - pkgconf
  - libpipeline
  - gdbm
  - groff
- name: man-pages
  url: https://www.kernel.org/pub/linux/docs/man-pages/man-pages-6.06.tar.xz
- name: markupsafe
  url: https://pypi.org/packages/source/M/MarkupSafe/MarkupSafe-2.1.5.tar.gz
  deps:
  # - zlib
  # - expat
  # - libffi
  # - python
  - wheel
  - setuptools
- name: meson
  url: https://github.com/mesonbuild/meson/releases/download/1.3.2/meson-1.3.2.tar.gz
  deps:
  # - zlib
  # - expat
  # - libffi
  # - python
  - flit-core
  - wheel
  - setuptools
- name: ninja
  url: https://github.com/ninja-build/ninja/archive/v1.11.1/ninja-1.11.1.tar.gz
  deps:
  # - zlib
  # - expat
  # - libffi
  # - python
  - flit-core
  - wheel
- name: openssl
  url: https://www.openssl.org/source/openssl-3.2.1.tar.gz
  deps:
  - zlib
- name: pkgconf
  url: https://distfiles.ariadne.space/pkgconf/pkgconf-2.1.1.tar.xz
- name: procps-ng
  url: https://sourceforge.net/projects/procps-ng/files/Production/procps-ng-4.0.4.tar.xz
  deps:
  - pkgconf
  - ncurses
- name: psmisc
  url: https://sourceforge.net/projects/psmisc/files/psmisc/psmisc-23.6.tar.xz
- name: python-docs
  url: https://www.python.org/ftp/python/doc/3.12.2/python-3.12.2-docs-html.tar.bz2
- name: readline
  url: https://ftp.gnu.org/gnu/readline/readline-8.2.tar.gz
- name: setuptools
  url: https://pypi.org/packages/source/s/setuptools/setuptools-69.1.0.tar.gz
  deps:
  # - zlib
  # - expat
  # - libffi
  # - python
  - flit-core
  - wheel
- name: shadow
  url: https://github.com/shadow-maint/shadow/releases/download/4.14.5/shadow-4.14.5.tar.xz
  deps:
  - libxcrypt
- name: sysklogd
  url: https://www.infodrom.org/projects/sysklogd/download/sysklogd-1.5.1.tar.gz
- name: systemd
  url: https://github.com/systemd/systemd/archive/v255/systemd-255.tar.gz
- name: systemd-man-pages
  url: https://anduin.linuxfromscratch.org/LFS/systemd-man-pages-255.tar.xz
- name: sysvinit
  url: https://github.com/slicer69/sysvinit/releases/download/3.08/sysvinit-3.08.tar.xz
  deps:
  - libxcrypt
- name: tcl
  url: https://downloads.sourceforge.net/tcl/tcl8.6.13-src.tar.gz
- name: tcl-html
  url: https://downloads.sourceforge.net/tcl/tcl8.6.13-html.tar.gz
- name: tzdata
  url: https://www.iana.org/time-zones/repository/releases/tzdata2024a.tar.gz
  tarFlags: ''
- name: udev-lfs
  url: https://anduin.linuxfromscratch.org/LFS/udev-lfs-20230818.tar.xz
  tarFlags: ''
- name: vim
  url: https://github.com/vim/vim/archive/v9.1.0041/vim-9.1.0041.tar.gz
- name: wheel
  url: https://pypi.org/packages/source/w/wheel/wheel-0.42.0.tar.gz
  deps:
  - flit-core
  # - zlib
  # - expat
  # - libffi
  # - python
- name: xml-parser
  url: https://cpan.metacpan.org/authors/id/T/TO/TODDR/XML-Parser-2.47.tar.gz
  deps:
  - expat
- name: zlib
  url: https://zlib.net/fossils/zlib-1.3.1.tar.gz
- name: zstd
  url: https://github.com/facebook/zstd/releases/download/v1.5.5/zstd-1.5.5.tar.gz

- name: libelf
  srcFrom: elfutils
  deps:
  - zlib
- name: udev
  srcFrom: systemd
  deps:
  # - zlib
  # - expat
  # - libffi
  # - python
  - gperf
  - libcap
  - libxcrypt
  - pkgconf
  - meson
  - ninja
  - markupsafe
  - jinja2
  - zstd
  - openssl
  - kmod
  srcDeps:
  - udev-lfs
  - systemd-man-pages

# These are the stages in the build process
stages:
# This stage uses the image defined above to compile a compiler and C/C++ environment
- name: cross-toolchain
  parent: host
  packages:
  - binutils-from-host
  - gcc-from-host
  - linux-headers-from-host
  - glibc-from-host
  - libstdcpp-from-host

# This stage uses that compiler to compile a set of basic utilities need for a minimal
# linux system
- name: cross-toolchain-temp
  parent: cross-toolchain
  lfsInstall:
  - binutils-from-host
  - gcc-from-host
  - linux-headers-from-host
  - glibc-from-host
  - libstdcpp-from-host
  packages:
  - m4-bootstrap
  - ncurses-bootstrap
  - bash-bootstrap
  - coreutils-bootstrap
  - diffutils-bootstrap
  - file-bootstrap
  - findutils-bootstrap
  - gawk-bootstrap
  - grep-bootstrap
  - gzip-bootstrap
  - make-bootstrap
  - patch-bootstrap
  - sed-bootstrap
  - tar-bootstrap
  - xz-bootstrap
  - binutils-bootstrap
  - gcc-bootstrap

- name: chroot-base
  parent: scratch
  install:
  - m4-bootstrap
  - ncurses-bootstrap
  - bash-bootstrap
  - coreutils-bootstrap
  - diffutils-bootstrap
  - file-bootstrap
  - findutils-bootstrap
  - gawk-bootstrap
  - grep-bootstrap
  - sed-bootstrap
  - gzip-bootstrap
  - make-bootstrap
  - patch-bootstrap
  - sed-bootstrap
  - tar-bootstrap
  - xz-bootstrap
  - binutils-bootstrap
  - gcc-bootstrap
    
  preSteps: |
    COPY static/etc/passwd /etc/passwd
    COPY static/etc/group /etc/group
    
    RUN set -eu ; \
        mkdir -pv /var/log ; \
        touch /var/log/{btmp,lastlog,faillog,wtmp} ; \
        chgrp -v utmp /var/log/lastlog ; \
        chmod -v 664  /var/log/lastlog ; \
        chmod -v 600  /var/log/btmp ; \
        mkdir -pv /tmp
    
    RUN rm -rf /tools

# This stage then "chroot"s (actually just starts a new stage) into a new rootfs with
# all of the tools compiled above, and then compiles a few additional needed tools.
- name: chroot-build
  parent: chroot-base  
  preSteps: |
    ENV LFS=$LFS
    ENV LFS_SRC=/src/lfs
    ENV LC_ALL=$LC_ALL
    ENV LFS_TGT=$LFS_TGT
    ENV CONFIG_SITE=$CONFIG_SITE
    ENV MAKEFLAGS=$MAKEFLAGS
     
    RUN set -eu ; \
        mkdir -pv $LFS/{etc,var} $LFS/usr/{bin,lib,sbin} ; \
        for i in bin lib sbin; do \
          ln -sv --force usr/$i $LFS/$i ; \
        done ; \
        case $(uname -m) in \
          x86_64) mkdir -pv $LFS/lib64 ;; \
        esac ;
  packages:
  - bison-bootstrap
  - perl-bootstrap
  - python-bootstrap
  - texinfo-bootstrap
  - util-linux-bootstrap

# This stage then installs those remaining tools
- name: lfs-base
  parent: chroot-base
  install:
  - bison-bootstrap
  - perl-bootstrap
  - python-bootstrap
  - texinfo-bootstrap 
  - util-linux-bootstrap

# This stage then uses all of the self-compiled tools to re-compile all of those tools,
# as well as the rest of the packages, including a kernel, init system, and bootloader
- name: lfs-build
  parent: lfs-base
  preSteps: |
    ENV LFS=$LFS
    ENV LFS_SRC=/src/lfs
    ENV LC_ALL=$LC_ALL
    ENV LFS_TGT=$LFS_TGT
    ENV CONFIG_SITE=$CONFIG_SITE
    ENV MAKEFLAGS=$MAKEFLAGS

    RUN set -eu ; \
        mkdir -pv $LFS/{etc,var} $LFS/usr/{bin,lib,sbin} ; \
        for i in bin lib sbin; do \
          ln -sv --force usr/$i $LFS/$i ; \
        done ; \
        case $(uname -m) in \
          x86_64) mkdir -pv $LFS/lib64 ;; \
        esac ;
  packages:
  - man-pages
  - iana-etc
  - glibc
  - zlib
  - bzip2
  - xz
  - zstd
  - file
  - readline
  - m4
  - bc
  - flex
  - tcl
  - expect
  - dejagnu
  - pkgconf
  - binutils
  - gmp
  - mpfr
  - mpc
  - attr
  - acl
  - libcap
  - libxcrypt
  - shadow
  - gcc
  - ncurses
  - sed
  - psmisc
  - gettext
  - bison
  - grep
  - bash
  - libtool
  - gdbm
  - gperf
  - expat
  - inetutils
  - less
  - perl
  - xml-parser
  - intltool
  - autoconf
  - automake
  - openssl
  - kmod
  - libelf
  - libffi
  - python
  - coreutils
  - check
  - diffutils
  - gawk
  - findutils
  - groff
  - grub
  - gzip
  - iproute2
  - kbd
  - libpipeline
  - make
  - patch
  - tar
  - texinfo
  - vim
  - man-db
  - procps-ng
  - util-linux
  - e2fsprogs
  - sysklogd
  - sysvinit
  - linux
  - lfs-bootscripts

# This technically isn't required as a separate stage, but all of these packages require python
# and its run-time dependencies, so its faster to break those out into a separate stage to reduce the
# number of copies
- name: lfs-build-py
  parent: lfs-build
  install:
  - expat
  - zlib
  - libffi
  - python
  packages:
  - flit-core
  - wheel
  - setuptools
  - meson
  - ninja
  - markupsafe
  - jinja2
  - udev


# # This stage then "chroot"s one last time, and copies all of the self-compiled tools,
# # forming a usable linux container.
# # This stage is commented out by default in favor of the next one
# - name: lfs
#   # parent: lfs-base
#   parent: scratch
#   install:
#   - man-pages
#   - iana-etc
#   - glibc
#   - zlib
#   - bzip2
#   - xz
#   - zstd
#   - file
#   - readline
#   - m4
#   - bc
#   - flex
#   - tcl
#   - expect
#   - dejagnu
#   - pkgconf
#   - binutils
#   - gmp
#   - mpfr
#   - mpc
#   - attr
#   - acl
#   - libcap
#   - libxcrypt
#   - shadow
#   - gcc
#   - ncurses
#   - sed
#   - psmisc
#   - gettext
#   - bison
#   - grep
#   - bash
#   - libtool
#   - gdbm
#   - gperf
#   - expat
#   - inetutils
#   - less
#   - perl
#   - xml-parser
#   - intltool
#   - autoconf
#   - automake
#   - openssl
#   - kmod
#   - libelf
#   - libffi
#   - python
#   - coreutils
#   - check
#   - diffutils
#   - gawk
#   - findutils
#   - groff
#   - grub
#   - gzip
#   - iproute2
#   - kbd
#   - libpipeline
#   - make
#   - patch
#   - tar
#   - texinfo
#   - vim
#   - vim
#   - man-db
#   - procps-ng
#   - util-linux
#   - e2fsprogs
#   - sysklogd
#   - sysvinit
#   - linux

# This stage "chroot"s one final time like the one above, but only copies the tools needed for the absolute
# bare essentials:
# * A kernel, init system, and boot loader
# * A shell
# * Basic utilities like cp, mv, ls, tar, grep, sed, awk, gzip, vim, mount, and ps
# You could, in theory, trim this even further, if desired
- name: mini-lfs
  parent: scratch
  install:
  - grub
  - linux
  - util-linux
  - sysvinit
  - glibc
  - ncurses
  - bash
  - coreutils
  - zlib
  - grep
  - gawk
  - sed
  - tar
  - gzip
  - procps-ng
  - vim
  - findutils
  - xz
  - lfs-bootscripts
  - libxcrypt
  - shadow
  - psmisc
  - udev
  - sysklogd
  - iproute2
  - libcap
  - inetutils
  - e2fsprogs
  - openssl
  - zstd
  - kmod
  - procps-ng
  preSteps: |
    COPY static/etc/passwd /etc/passwd
    COPY static/etc/group /etc/group
    COPY static/etc/inittab /etc/inittab
    COPY static/etc/fstab /etc/fstab
    COPY static/boot/grub/grub.cfg /boot/grub/grub.cfg
    
    RUN set -eu ; \
        mkdir -pv /var/log ; \
        touch /var/log/{btmp,lastlog,faillog,wtmp} ; \
        chgrp -v utmp /var/log/lastlog ; \
        chmod -v 664  /var/log/lastlog ; \
        chmod -v 600  /var/log/btmp ; \
        mkdir -pv /tmp /mnt /dev/pts /dev/shm ; \
        mkdir -pv $LFS/{dev,proc,sys,run} ; \
        mkdir -pv /{boot,home,mnt,opt,srv} ; \
        mkdir -pv /etc/{opt,sysconfig} ; \
        mkdir -pv /lib/firmware ; \
        mkdir -pv /media/{floppy,cdrom} ; \
        mkdir -pv /usr/{,local/}{include,src} ; \
        mkdir -pv /usr/local/{bin,lib,sbin} ; \
        mkdir -pv /usr/{,local/}share/{color,dict,doc,info,locale,man} ; \
        mkdir -pv /usr/{,local/}share/{misc,terminfo,zoneinfo} ; \
        mkdir -pv /usr/{,local/}share/man/man{1..8} ; \
        mkdir -pv /var/{cache,local,log,mail,opt,spool} ; \
        mkdir -pv /var/lib/{color,misc,locate} ; \
        ln -sfv /run /var/run ; \
        ln -sfv /run/lock /var/lock ; \
        install -dv -m 0750 /root ; \
        install -dv -m 1777 /tmp /var/tmp
    # TODO: Do this ahead of time w/ the static/etc/shadow file
    RUN \
      set -eu ; \
      pwconv ; \
      grpconv ; \
      mkdir -p /etc/default ; \
      useradd -D --gid 999 ; \
      echo 'root:SuperSecretPassword' | chpasswd
    # See below for the purpose of this random value
    RUN head -c1 /dev/urandom > /tmp/nonce

- name: make-boot-image
  parent: host
  preSteps: |
    RUN apt-get update && apt-get install -y libguestfs-tools bc qemu-utils
    # Docker is bugged, and --mount=from doesn't invalidate cache, so we add this
    # dummy copy to force regenerating the root FS image when the lfs stage re-runs
    COPY --from=mini-lfs /tmp/nonce /tmp/dummy
    # We mount /boot and /lib/modules here because supermin crashes if they don't exist
    # the way it expects, even if you explicitly specify another kernel and module dir
    RUN \
        --mount=from=mini-lfs,source=/,target=$LFS \
        --mount=from=mini-lfs,source=/boot/,target=/boot/ \
        --mount=from=mini-lfs,source=/lib/modules/,target=/lib/modules/ \
        --mount=type=bind,source=util/make-boot-image.sh,target=$LFS_SRC/make-boot-image.sh \
      $LFS_SRC/make-boot-image.sh

# Once we have our final volume image, we can produce an image that container nothing except that
# file. This final image can be extracted using 'docker create' followed by 'docker export', which
# can then be used as a QEMU image, or written to physical media, but this image is also compatible
# with Kubevirt's containerImage feature, allowing it to be used to create a containerized VM after
# being pushed to an OCI registry.
# This export step is automated for you with the helper script
# ./export.sh <image tag> <exported directory>
- name: boot-image
  parent: scratch
  preSteps: |
    ARG LFS
    COPY --from=make-boot-image $LFS.qcow2 /disk/lfs.qcow2

# # If you ever run into a problem, you can put an additional stage at the bottom of this file.
# # Because docker only builds stages that are referenced (including indirectly) from the final stage,
# # you can use this to build a "debug" image which you can then run interactively.
# # Examples include browsing the source tree of a downloaded tarball, inspecting the output of
# # a compiled package, or copying a package into a temporary directory back into the host image
# - name: debug
#   # parent: gcc-dl
#   # parent: gcc
#   parent: host
#   preSteps: |
#     COPY --from=gcc-dl $LFS_SRC/. $LFS_SRC/
#   preSteps: |
#     COPY --from=gcc / $LFS/
